{"version":3,"sources":["Components.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["JHRule","props","style","border","height","backgroundImage","JRadioGroup","useState","Math","random","toString","replace","substr","group","childrenWithProps","React","Children","map","children","child","isValidElement","cloneElement","checked","value","setter","flexFlow","display","JRadio","id","a","type","name","onChange","htmlFor","JAccordian","open","setOpen","cursor","onClick","ExpandLess","ExpandMore","title","margin","JGraphBox","useEffect","width","d3","remove","svg","append","attr","addData","dGet","d","speed","elevation","x","domain","graphData","time","range","call","y","datum","y0","y1","className","position","right","top","JGraphGroup","JHoverBox","hovered","setHovered","i","genMapId","info","on","getPaintProperty","days","length","console","log","loaded","P","styled","p","left","bottom","distances","toFixed","times","elevations","topspeeds","averagespeeds","JHighlightGroup","highlight","setHighlight","filterDays","setPaintProperty","includes","topDaysL","srcList","largest","l","sort","b","topDays","hillinessList","e","day","Array","keys","JColorbyGroup","colorby","setColorby","setLayersToColor","color","c","hillys","maxDistance","max","minDistance","min","maxElevation","minElevation","maxTop","minTop","maxAve","minAve","maxHill","minHill","points","npi","provinces","findIndex","indexOf","colors","lerpColor","hillyness","amount","ah","ar","ag","ab","bh","slice","getDataInfo","fetch","response","json","jresponse","addRestOfData","locations","setGraphData","getAData","loc","dataUrl","blob","arrayBuffer","arr","Int32Array","Float32Array","speeds","dataPoints","latitude","longtitude","setInfo","setLoaded","data","floats","lf","idx","f","push","addLineToMap","addSource","addLayer","mapboxgl","accessToken","App","mapContainer","useRef","setMap","window","current","mc","Map","container","center","zoom","graphType","setGraphType","ref","marginLeft","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec87302b.chunk.js","sourcesContent":["import React, { useState, ReactNode } from 'react';\nimport { ExpandLess, ExpandMore } from '@mui/icons-material';\nexport function JHRule(props: {}) {\n  return <hr style={{\n      border: \"0\",\n      height: \"1px\",\n      backgroundImage: \"linear-gradient(to right, #CCCCCC66, #CCCCCCFF, #CCCCCC66)\",\n  }}/>\n}\n\nexport function JRadioGroup(props: {value:string, setter: (a:string)=>void, children?: ReactNode}) {\n  const [group, ] = useState(Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5));\n  const childrenWithProps = React.Children.map(props.children, child => {\n    if (React.isValidElement(child)) {\n      return React.cloneElement(child, {\n        group,\n        checked: child.props.value === props.value,\n        setter: props.setter\n      });\n    }\n    return child;\n  });\n  return <div style={{flexFlow: \"column\", display: \"flex\"}}> {childrenWithProps} </div>\n\n}\n\nexport function JRadio(props: {value: string, group?: string, checked?: boolean, setter?: (a:string)=>void}) {\n  let id = props.group + \"-\" + props.value;\n  let setter = props.setter ?? ((a) => {});\n  return (<div>\n            <input type=\"radio\" id={id} value={props.value} name={props.group}\n                   checked={props.checked ?? false} onChange={() => setter(props.value)}/>\n            <label htmlFor={id}> {props.value} </label>\n          </div>)\n}\n\n\nexport function JAccordian(props: {title: string, children: ReactNode}) {\n  const [open, setOpen] = useState(false);\n  return (<div>\n    <h2 style={{cursor: \"pointer\"}} onClick={() => setOpen(!open)}>\n      {open ? <ExpandLess/> : <ExpandMore/> } { props.title }\n    </h2>\n    <div style={{margin: \"10px\"}}>\n      { open ? <div>{props.children}</div> : <div style={{display: \"none\"}}>{props.children}</div> }\n    </div>\n  </div>);\n}\n","import React, { useRef, useEffect, useState } from 'react';\nimport styled from '@emotion/styled'\nimport mapboxgl from 'mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport './App.css';\nimport {JRadio, JRadioGroup, JAccordian, JHRule} from './Components'\nimport * as d3 from \"d3\";\n\nmapboxgl.accessToken = 'pk.eyJ1Ijoic3VqYW5jaGFrcmFib3J0eSIsImEiOiJja2Q5MzBuc3owenplMnBzY2I0eDYwdDhvIn0.imItePLDlYNF2BGVde_mkw';\n\ntype DataInfo = {\n  locations: string[],\n  provinces: [string, number][],\n  days: number[],\n  distances: number[],\n  elevations: number[],\n  times: number[],\n  topspeeds: number[],\n  averagespeeds: number[],\n}\n\ntype DataPoint = {\n  elevation: number,\n  latitude: number,\n  longtitude: number,\n  speed: number,\n  time: number,\n}\n\nfunction App() {\n  const defaultInfo = {locations: [], provinces:[], days:[], distances:[], elevations:[], times:[], topspeeds:[], averagespeeds:[]};\n  const mapContainer = useRef(null);\n  const [map, setMap] = useState<mapboxgl.Map>();\n  const [info, setInfo] = useState<DataInfo>(defaultInfo);\n  const [graphData, setGraphData] = useState<DataPoint[]>([]);\n  const [loaded, setLoaded] = useState(false);\n  useEffect(() => {\n    if (typeof window === \"undefined\" || mapContainer.current === null) return;\n    if (map) return; // initialize map only once\n\n    const mc = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/outdoors-v11',\n      center: [-95, 60],\n      zoom: 3.0\n    });\n\n    mc.on('load', () => {\n      addData(mc, setInfo, setGraphData, setLoaded);\n    });\n    setMap(mc);\n  }, [map]);\n\n  const [graphType, setGraphType] = useState(\"None\");\n  return (\n    <div>\n      <div id=\"background\">\n        <div ref={mapContainer} className=\"map-container\" />\n      </div>\n\n      <JHoverBox info={info} map={map} loaded={loaded} />\n      <JGraphBox value={graphType} graphData={graphData} />\n      <div className=\"card\" id=\"panel\">\n        <h1>Jacob&rsquo;s bike ride</h1>\n        <div style={{marginLeft: \"10px\"}}>\n          <JAccordian title=\"Line Color\">\n            <JColorbyGroup info={info} map={map} />\n          </JAccordian>\n          <JHRule />\n          <JAccordian title=\"Graph\">\n            <JGraphGroup value={graphType} setter={setGraphType} />\n          </JAccordian>\n          <JHRule />\n          <JAccordian title=\"Highlights\">\n            <JHighlightGroup info={info} map={map} />\n          </JAccordian>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction JGraphBox(props: {graphData: DataPoint[], value: string}) {\n  useEffect(() => {\n    // set the dimensions and margins of the graph\n    const margin = {top: 10, right: 30, bottom: 30, left: 50},\n    width = 660 - margin.left - margin.right,\n    height = 300 - margin.top - margin.bottom;\n\n    // append the svg object to the body of the page\n    d3.select(\"#chartsvg\").remove();\n    const svg = d3.select(\"#chartdiv\")\n      .append(\"svg\")\n      .attr(\"id\",\"chartsvg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n      .attr(\"transform\",`translate(${margin.left},${margin.top})`);\n\n\n\n    const addData = async (value: string) => {\n      const dGet = (d: DataPoint) => {\n        switch(props.value) {\n          case \"Speed\": return d.speed\n          case \"Elevation\": return d.elevation\n          default: return 0\n        }\n      }\n      // Add X axis\n      const x = d3.scaleTime()\n        .domain(d3.extent(props.graphData, d => d.time*1000) as [number, number])\n        .range([ 0, width ]);\n\n      svg.append(\"g\")\n        .attr(\"transform\", `translate(0,${height})`)\n        .call(d3.axisBottom(x));\n\n      // Add Y axis\n      const y = d3.scaleLinear()\n        .domain([0, d3.max(props.graphData, d => dGet(d)) as number])\n        .range([ height, 0 ]);\n\n      svg.append(\"g\")\n        .call(d3.axisLeft(y));\n      // Add the area\n      svg.append(\"path\")\n        .datum(props.graphData)\n        .attr(\"fill\", \"#cce5df\")\n        .attr(\"stroke\", \"#69b3a2\")\n        .attr(\"stroke-width\", 1.5)\n        .attr(\"d\",\n              d3.area<DataPoint>()\n                .x((d: DataPoint) => x(d.time*1000))\n                .y0(y(0))\n                .y1((d: DataPoint) => y(dGet(d)))\n            )\n    }\n    switch(props.value) {\n        case \"Speed\": addData('speed'); break;\n        case \"Elevation\": addData('elevation'); break;\n    }\n\n  }, [props.graphData, props.value])\n  if (props.value === \"None\") {\n    return <div></div>\n  }\n  return (\n    <div className=\"card\" id=\"graphbox\" style={{position: \"absolute\", right: \"0px\", top: \"0px\"}}>\n      <div id=\"chartdiv\"></div>\n    </div>\n  )\n}\n\nfunction JGraphGroup(props: {value: string, setter: (s: string) => void}) {\n  return (\n          <JRadioGroup value={props.value} setter={props.setter}>\n            <JRadio value=\"None\"/>\n            <JRadio value=\"Speed\"/>\n            <JRadio value=\"Elevation\"/>\n          </JRadioGroup>\n  )\n}\n\nfunction JHoverBox (props: {info: DataInfo, map?: mapboxgl.Map, loaded: boolean}) {\n  const [hovered, setHovered] = useState(-1);\n  useEffect(() => {\n    for (let i = 0; i < props.info.days.length; i++) {\n      let id = genMapId(i, props.info)\n      props.map?.on('mouseenter', id, () => {\n        if (props.map?.getPaintProperty(id, 'line-opacity') === 1) {\n          setHovered(i-1)\n        }\n      })\n    }\n    console.log(\"Hover listeners setup: \", props.info.days.length, props.map)\n  }, [props.map, props.loaded, props.info])\n  if (hovered === -1) {\n    return <div></div>\n  }\n  const P = styled.p`\n    margin-bottom: 0px;\n    margin-top: 2px;\n  `\n  return (\n    <div className=\"card\" id=\"hoverbox\" style={{position: \"absolute\", left: \"0px\", bottom: \"0px\"}}>\n      <h3> Day {hovered+1}: {genMapId(hovered+1, props.info)} </h3>\n      <P> Distance: {(props.info.distances[hovered] / 1000).toFixed(3)}km </P>\n      <P> Time: {(props.info.times[hovered] / 3600).toFixed(2)}h </P>\n      <P> Ascent: {(props.info.elevations[hovered]).toFixed(0)}m </P>\n      <P> Max Speed: {(props.info.topspeeds[hovered] * 3.6).toFixed(1)}km/h </P>\n      <P> Average Speed: {(props.info.averagespeeds[hovered] * 3.6).toFixed(1)}km/h </P>\n    </div>\n  )\n\n}\n\nfunction JHighlightGroup(props: {info: DataInfo, map?: mapboxgl.Map}) {\n  const [highlight, setHighlight] = useState(\"All\");\n  useEffect(() => {\n    const filterDays = (days: number[]) => {\n      for (let i = 1; i < props.info.days.length; i++) {\n        props.map?.setPaintProperty(genMapId(i, props.info), 'line-opacity', days.includes(i) ? 1 : 0)\n      }\n    }\n    const topDaysL = (srcList: number[]) => {\n      let largest = [[0,0], [0,0], [0,0], [0,0], [0,0]]\n      for (let i = 0; i < props.info.days.length; i++) {\n        const l = srcList[i]\n        if (largest[0][0] < l) {\n          largest[0] = [l, i]\n        }\n        largest.sort((a, b) => a[0] - b[0])\n      }\n      return largest.map((a) => a[1]+1)\n    }\n    const topDays = (p: string) => {\n      let data: any = props.info\n      let srcList = data[p]\n      return topDaysL(srcList)\n    }\n    const hillyness = (day: number) => props.info.elevations[day] / (props.info.distances[day] / 1000)\n    const hillinessList = props.info.distances.map((e, i) => hillyness(i))\n    switch (highlight) {\n      case 'All': filterDays([...Array(props.info.days.length+1).keys()]); break;\n      case 'Top Distance': filterDays(topDays('distances')); break;\n      case 'Top Elevation': filterDays(topDays('elevations')); break;\n      case 'Top Time': filterDays(topDays('times')); break;\n      case 'Top Hilliness': filterDays(topDaysL(hillinessList)); break;\n      case 'Top Average Speed': filterDays(topDays('averagespeeds')); break;\n      case 'Top Max Speed': filterDays(topDays('topspeeds')); break;\n      default: filterDays([]); break;\n    }\n  }, [highlight, props.info, props.map])\n  return (\n          <JRadioGroup value={highlight} setter={setHighlight}>\n            <JRadio value=\"All\"/>\n            <JRadio value=\"Top Average Speed\"/>\n            <JRadio value=\"Top Max Speed\"/>\n            <JRadio value=\"Top Distance\"/>\n            <JRadio value=\"Top Time\"/>\n            <JRadio value=\"Top Elevation\"/>\n            <JRadio value=\"Top Hilliness\"/>\n          </JRadioGroup>\n  )\n}\n\nfunction JColorbyGroup(props: {map?: mapboxgl.Map, info: DataInfo}) {\n  const [colorby, setColorby] = useState(\"Same\");\n\n  useEffect(() => {\n    const info = props.info\n    const map = props.map\n    const setLayersToColor = (color: (string|((i: number) => string))) => {\n      for (let i = 1; i < info.days.length; i++) {\n        let id = genMapId(i, info);\n        let c = (typeof color === \"string\") ? color : color(i)\n        map?.setPaintProperty(id, \"line-color\", c)\n      }\n    }\n\n    const provinceColorOfDay = (day: number) => {\n      let colors = [\"#2196f3\", \"#ff9800\", \"#43a047\", \"#81d4fa\", \"#e53935\", \"#1a237e\", \"#00acc1\", \"#004d40\", \"#e65100\", \"#4e342e\"]\n      let provinces = [\"BC\", \"Alberta\", \"Saskatchewan\", \"Manitoba\", \"Ontario\", \"Quebec\", \"New Brunswick\", \"Nova Scotia\", \"PEI\", \"Newfoundland\"]\n      let points = info.days[day]\n      let npi = info.provinces.findIndex((x) => x[1] >= points)\n      let p = npi===-1 ? 0 : npi - 1\n      return colors[provinces.indexOf(info.provinces[p][0])]\n    }\n\n    const hillys = info.elevations.map((e, i) => e / info.distances[i])\n    const maxDistance = Math.max(...info.distances)\n    const minDistance = Math.min(...info.distances)\n    const maxElevation = Math.max(...info.elevations)\n    const minElevation = Math.min(...info.elevations)\n    const maxTop = Math.max(...info.topspeeds)\n    const minTop = Math.min(...info.topspeeds)\n    const maxAve = Math.max(...info.averagespeeds)\n    const minAve = Math.min(...info.averagespeeds)\n    const maxHill = Math.max(...hillys)\n    const minHill = Math.min(...hillys)\n\n    const colorByDistance = (day: number) =>\n      lerpColor(\"#FFFFFF\",\"#000000\", (info.distances[day-1] - minDistance) / (maxDistance - minDistance))\n    const colorByElevation = (day: number) =>\n      lerpColor(\"#FFFFFF\",\"#000000\", (info.elevations[day-1] - minElevation) / (maxElevation - minElevation))\n    const colorBySpeedTop = (day: number) =>\n      lerpColor(\"#FFFFFF\",\"#000000\", (info.topspeeds[day-1] - minTop) / (maxTop - minTop))\n    const colorBySpeedAve = (day: number) =>\n      lerpColor(\"#FFFFFF\",\"#000000\", (info.averagespeeds[day-1] - minAve) / (maxAve - minAve))\n\n    const hillyness = (day: number) => ((hillys[day-1] - minHill) / (maxHill - minHill))\n    const colorByHills = (day: number) => {\n      return lerpColor(\"#FFFFFF\",\"#000000\", hillyness(day))\n    }\n    const colorByDay = (day: number) => {\n      let colors = [\"#2196f3\", \"#ff9800\", \"#43a047\", \"#e53935\"]\n      return colors[day % colors.length]\n    }\n    switch (colorby) {\n      case \"Same\": setLayersToColor(\"#fc4c02\"); break;\n      case \"Province\": setLayersToColor(provinceColorOfDay); break;\n      case \"Day\": setLayersToColor(colorByDay); break;\n      case \"Elevation\": setLayersToColor(colorByElevation); break;\n      case \"Hilliness\": setLayersToColor(colorByHills); break;\n      case \"Distance\": setLayersToColor(colorByDistance); break;\n      case \"Top Speed\": setLayersToColor(colorBySpeedTop); break;\n      case \"Average Speed\": setLayersToColor(colorBySpeedAve); break;\n    }\n  }, [colorby, props.info, props.map])\n\n  return (\n          <JRadioGroup value={colorby} setter={setColorby}>\n            <JRadio value=\"Same\"/>\n            <JRadio value=\"Province\"/>\n            <JRadio value=\"Day\"/>\n            <JRadio value=\"Distance\"/>\n            <JRadio value=\"Hilliness\"/>\n            <JRadio value=\"Elevation\"/>\n            <JRadio value=\"Top Speed\"/>\n            <JRadio value=\"Average Speed\"/>\n          </JRadioGroup>\n  )\n}\n\n// https://gist.github.com/rosszurowski/67f04465c424a9bc0dae\nfunction lerpColor(a: string, b: string, amount: number) {\n    var ah = +a.replace(/#/g, '0x'),\n        ar = ah >> 16, ag = (ah >> 8) & 0xff, ab = ah & 0xff,\n        bh = +b.replace(/#/g, '0x'),\n        br = bh >> 16, bg = (bh >> 8) & 0xff, bb = bh & 0xff,\n        rr = ar + amount * (br - ar),\n        rg = ag + amount * (bg - ag),\n        rb = ab + amount * (bb - ab);\n    return '#' + ((1 << 24) + (rr << 16) + (rg << 8) + rb | 0).toString(16).slice(1);\n}\n\n\nasync function getDataInfo() {\n  const dataUrl = process.env.PUBLIC_URL + '/bike_data/info';\n  let response = await fetch(dataUrl);\n  let jresponse = await response.json();\n  console.log(jresponse);\n  return jresponse;\n}\nasync function addRestOfData(locations: number[][], setGraphData: (d: DataPoint[])=>void) {\n  async function getAData(loc: string) {\n    const dataUrl = process.env.PUBLIC_URL + '/bike_data/' + loc;\n    let response = await fetch(dataUrl);\n    let blob = await response.blob();\n    let arr = await blob.arrayBuffer();\n    console.log(\"Finished Graph Data: \" + loc)\n    return arr;\n  }\n\n  const times = new Int32Array(await getAData('time'))\n  const speeds = new Float32Array(await getAData('speed'))\n  const elevations = new Float32Array(await getAData('ele'))\n\n  const dataPoints: DataPoint[] = locations.map((l, i) => {\n    return {\n      latitude: l[0],\n      longtitude: l[1],\n      time: times[i],\n      speed: speeds[i],\n      elevation: elevations[i],\n    }\n  })\n  console.log({locations, times, speeds, elevations})\n  console.log(\"Finished Setting Graph Data\", dataPoints)\n  setGraphData(dataPoints)\n\n}\nasync function addData(map: mapboxgl.Map, setInfo: (d: DataInfo)=>void, setGraphData: (d: DataPoint[])=>void, setLoaded: (b:boolean) => void) {\n  const info: DataInfo = await getDataInfo();\n  const dataUrl = process.env.PUBLIC_URL + '/bike_data/loc';\n  let data = [];\n  let response = await fetch(dataUrl);\n  let blob = await response.blob();\n  let arr = await blob.arrayBuffer();\n  let floats = new Float32Array(arr);\n\n  let lf = null;\n  let idx = 1;\n  let c = 0;\n  let locations = [];\n  for (let f of floats) {\n    if (lf === null) {\n      lf = f;\n    } else {\n      data.push([f, lf]);\n      locations.push([f, lf])\n      c += 1;\n      lf = null;\n    }\n    if (info.days[idx] <= c) {\n      addLineToMap(data, map, genMapId(idx, info));\n      idx += 1;\n      data = [];\n    }\n  }\n  setInfo(info);\n  console.log(\"Fetching complete\");\n  await addRestOfData(locations, setGraphData)\n  setLoaded(true)\n}\n\nfunction genMapId(idx: number, info: DataInfo): string {\n return info.locations[idx-1]+ \" to \" +info.locations[idx]\n}\nfunction addLineToMap(data: number[][], map: mapboxgl.Map, id: string) {\n  map.addSource(id, {\n    'type': 'geojson',\n    'data': {\n      'type': 'Feature',\n      'properties': {},\n      'geometry': {\n        'type': 'LineString',\n        'coordinates': data\n      }\n    }\n  });\n\n  map.addLayer({\n    'id': id,\n    'type': 'line',\n    'source': id,\n    'layout': {\n      'line-join': 'round',\n      'line-cap': 'round'\n    },\n    'paint': {\n      'line-color': '#fc4c02',\n      'line-width': 5\n    }\n  });\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}