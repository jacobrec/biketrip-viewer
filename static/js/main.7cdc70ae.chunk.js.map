{"version":3,"sources":["Components.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["JHidden","props","style","display","show","children","JToggleInput","justifyContent","alignItems","label","JToggle","enabled","setEnabled","styled","input","JToggleLabel","JToggleSpan","span","left","defaultProps","className","type","checked","onClick","JHRule","border","height","backgroundImage","JRadioGroup","useState","Math","random","toString","replace","substr","group","childrenWithProps","React","Children","map","child","isValidElement","cloneElement","value","setter","flexFlow","JRadio","id","a","name","onChange","htmlFor","JAccordian","open","setOpen","cursor","ExpandLess","ExpandMore","title","margin","JSummaryBox","P","p","position","right","bottom","info","totaldistance","toFixed","totaltime","totalelevation","JOptionGroup","graphEnabled","setGraphEnabled","totalsEnabled","setTotalsEnabled","hoverboxEnabled","setHoverboxEnabled","JGraphBox","useEffect","width","d3","remove","svg","append","attr","addData","dGet","d","speed","elevation","x","domain","graphData","time","range","call","y","datum","y0","y1","top","JHoverBox","hovered","setHovered","i","genMapId","on","getPaintProperty","days","length","console","log","loaded","distances","times","elevations","topspeeds","averagespeeds","JHighlightGroup","highlight","setHighlight","filterDays","setPaintProperty","includes","topDaysL","srcList","largest","l","sort","b","topDays","hillinessList","e","day","Array","keys","JColorbyGroup","colorby","setColorby","setLayersToColor","color","c","hillys","maxDistance","max","minDistance","min","maxElevation","minElevation","maxTop","minTop","maxAve","minAve","maxHill","minHill","points","npi","provinces","findIndex","indexOf","colors","lerpColor","hillyness","amount","ah","ar","ag","ab","bh","slice","getDataInfo","process","fetch","response","json","jresponse","addRestOfData","locations","setGraphData","getAData","loc","dataUrl","blob","arrayBuffer","arr","Int32Array","Float32Array","speeds","dataPoints","latitude","longtitude","setInfo","setLoaded","data","floats","lf","idx","f","push","addLineToMap","addSource","addLayer","mapboxgl","workerClass","require","default","accessToken","App","mapContainer","useRef","setMap","window","current","mc","Map","container","center","zoom","graphType","ref","marginLeft","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7cdc70ae.chunk.js","sourcesContent":["import React, { useState, ReactNode } from 'react';\nimport { ExpandLess, ExpandMore } from '@mui/icons-material';\nimport styled from '@emotion/styled'\n\nexport function JHidden(props: {show:boolean, children?: ReactNode}) {\n    return <div style={{display: props.show ? \"block\" : \"none\"}}> {props.children} </div>\n}\n\nexport function JToggleInput(props: {enabled:boolean, setEnabled: (a:boolean)=>void, label:string}) {\n    return (\n        <div style={{display: \"flex\",\n                     justifyContent: \"space-between\",\n                     alignItems: \"center\"}}>\n            <label> {props.label} </label>\n            <JToggle enabled={props.enabled} setEnabled={props.setEnabled} />\n        </div>\n    )\n}\ntype JSpanProps = {\n    left: boolean\n}\nexport function JToggle(props: {enabled:boolean, setEnabled: (a:boolean)=>void,}) {\n    const JToggleInput = styled.input`\n        opacity: 0;\n        width: 0;\n        height: 0;\n    `;\n    const JToggleLabel = styled.label`\n        position: relative;\n        display: inline-block;\n        width: 30px;\n        height: 18px;\n\n    `\n    const JToggleSpan = styled.span<JSpanProps>`\n        position: absolute;\n        cursor: pointer;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        background-color: ${props => props.left ? \"#cccccc\" : \"#2196F3\"};\n        transition: .4s;\n        border-radius: 18px;\n\n        &:before {\n            position: absolute;\n            content: \"\";\n            height: 14px;\n            width: 14px;\n            left: 4px;\n            bottom: 2px;\n            background-color: white;\n            transition: .4s;\n            border-radius: 50%;\n            transform: ${props => props.left ? \"translateX(0px)\" : \"translateX(8px)\"};\n        }\n    `;\n    JToggleSpan.defaultProps = {\n        left: false\n    }\n\n    return (\n            <JToggleLabel className=\"switch\">\n                <JToggleInput type=\"checkbox\" checked={props.enabled}\n                    onClick={() => props.setEnabled(!props.enabled)}/>\n                <JToggleSpan left={!props.enabled}/>\n            </JToggleLabel>\n           )\n}\n\nexport function JHRule(props: {}) {\n  return <hr style={{\n      border: \"0px\",\n      height: \"1px\",\n      backgroundImage: \"linear-gradient(to right, #CCCCCC66, #CCCCCCFF, #CCCCCC66)\",\n  }}/>\n}\n\nexport function JRadioGroup(props: {value:string, setter: (a:string)=>void, children?: ReactNode}) {\n  const [group, ] = useState(Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5));\n  const childrenWithProps = React.Children.map(props.children, child => {\n    if (React.isValidElement(child)) {\n      return React.cloneElement(child, {\n        group,\n        checked: child.props.value === props.value,\n        setter: props.setter\n      });\n    }\n    return child;\n  });\n  return <div style={{flexFlow: \"column\", display: \"flex\"}}> {childrenWithProps} </div>\n\n}\n\nexport function JRadio(props: {value: string, group?: string, checked?: boolean, setter?: (a:string)=>void}) {\n  let id = props.group + \"-\" + props.value;\n  let setter = props.setter ?? ((a) => {});\n  return (<div>\n            <input type=\"radio\" id={id} value={props.value} name={props.group}\n                   checked={props.checked ?? false} onChange={() => setter(props.value)}/>\n            <label htmlFor={id}> {props.value} </label>\n          </div>)\n}\n\n\nexport function JAccordian(props: {title: string, children: ReactNode}) {\n  const [open, setOpen] = useState(false);\n  return (<div>\n    <h2 style={{cursor: \"pointer\"}} onClick={() => setOpen(!open)}>\n      {open ? <ExpandLess/> : <ExpandMore/> } { props.title }\n    </h2>\n    <div style={{margin: \"10px\"}}>\n      { open ? <div>{props.children}</div> : <div style={{display: \"none\"}}>{props.children}</div> }\n    </div>\n  </div>);\n}\n","import React, { useRef, useEffect, useState } from 'react';\nimport styled from '@emotion/styled'\nimport mapboxgl from 'mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport './App.css';\nimport {JRadio, JRadioGroup, JAccordian, JHRule, JToggleInput, JHidden} from './Components'\nimport * as d3 from \"d3\";\n\n// eslint-disable-next-line import/no-webpack-loader-syntax\n(mapboxgl as any).workerClass = require('worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker').default;\n\nmapboxgl.accessToken = 'pk.eyJ1Ijoic3VqYW5jaGFrcmFib3J0eSIsImEiOiJja2Q5MzBuc3owenplMnBzY2I0eDYwdDhvIn0.imItePLDlYNF2BGVde_mkw';\n\ntype DataInfo = {\n  locations: string[],\n  provinces: [string, number][],\n  days: number[],\n  distances: number[],\n  elevations: number[],\n  times: number[],\n  topspeeds: number[],\n  averagespeeds: number[],\n  totaldistance: number,\n  totaltime: number,\n  totalelevation: number,\n}\n\ntype DataPoint = {\n  elevation: number,\n  latitude: number,\n  longtitude: number,\n  speed: number,\n  time: number,\n}\n\nfunction App() {\n  const defaultInfo = {locations: [], provinces:[], days:[], distances:[], elevations:[], times:[], topspeeds:[], averagespeeds:[], totaltime: 0, totalelevation: 0, totaldistance: 0};\n  const mapContainer = useRef(null);\n  const [map, setMap] = useState<mapboxgl.Map>();\n  const [info, setInfo] = useState<DataInfo>(defaultInfo);\n  const [graphData, setGraphData] = useState<DataPoint[]>([]);\n  const [loaded, setLoaded] = useState(false);\n  useEffect(() => {\n    if (typeof window === \"undefined\" || mapContainer.current === null) return;\n    if (map) return; // initialize map only once\n\n    const mc = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/outdoors-v11',\n      center: [-95, 60],\n      zoom: 3.0\n    });\n\n    mc.on('load', () => {\n      addData(mc, setInfo, setGraphData, setLoaded);\n    });\n    setMap(mc);\n  }, [map]);\n\n  const [graphType, setGraphType] = useState(\"Elevation\");\n  const [totalsEnabled, setTotalsEnabled] = useState(false)\n  const [graphEnabled, setGraphEnabled] = useState(false)\n  const [hoverboxEnabled, setHoverboxEnabled] = useState(false)\n  return (\n    <div>\n      <div id=\"background\">\n        <div ref={mapContainer} className=\"map-container\" />\n      </div>\n\n      <JHidden show={graphEnabled}> <JGraphBox value={graphType} graphData={graphData} /> </JHidden>\n      <JHidden show={hoverboxEnabled}> <JHoverBox info={info} map={map} loaded={loaded} /> </JHidden>\n      <JHidden show={totalsEnabled}> <JSummaryBox info={info}/> </JHidden>\n      <div className=\"card\" id=\"panel\">\n        <h1>Jacob&rsquo;s bike ride</h1>\n        <div style={{marginLeft: \"10px\"}}>\n          <JAccordian title=\"Line Color\">\n            <JColorbyGroup info={info} map={map} />\n          </JAccordian>\n          <JHRule />\n          <JAccordian title=\"Highlights\">\n            <JHighlightGroup info={info} map={map} />\n          </JAccordian>\n          <JHRule />\n          <JAccordian title=\"Options\">\n            <JOptionGroup\n                totalsEnabled={totalsEnabled} setTotalsEnabled={setTotalsEnabled}\n                graphEnabled={graphEnabled} setGraphEnabled={setGraphEnabled}\n                hoverboxEnabled={hoverboxEnabled} setHoverboxEnabled={setHoverboxEnabled}\n            />\n          </JAccordian>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction JSummaryBox(props: {info: DataInfo}) {\n  const P = styled.p`\n    margin-bottom: 0px;\n    margin-top: 2px;\n  `\n  return (<div style={{position: \"absolute\", right: \"0px\", bottom: \"0px\"}} className=\"card\">\n      <h3> Trip Summary </h3>\n      <P> Distance: {(props.info.totaldistance / 1000).toFixed(3)}km </P>\n      <P> Time: {(props.info.totaltime / 3600).toFixed(2)}h </P>\n      <P> Ascent: {(props.info.totalelevation / 1000).toFixed(3)}km </P>\n  </div>)\n}\n\nfunction JOptionGroup(props: {\n    totalsEnabled: boolean, setTotalsEnabled: (s: boolean) => void,\n    graphEnabled: boolean, setGraphEnabled: (s: boolean) => void,\n    hoverboxEnabled: boolean, setHoverboxEnabled: (s: boolean) => void,\n}) {\n  return (\n        <div>\n          <JToggleInput label=\"Elevation Graph\" enabled={props.graphEnabled} setEnabled={props.setGraphEnabled} />\n          <JToggleInput label=\"Trip Summary\" enabled={props.totalsEnabled} setEnabled={props.setTotalsEnabled} />\n          <JToggleInput label=\"Day Summary\" enabled={props.hoverboxEnabled} setEnabled={props.setHoverboxEnabled} />\n        </div>\n  )\n}\n\nfunction JGraphBox(props: {graphData: DataPoint[], value: string}) {\n  useEffect(() => {\n    // set the dimensions and margins of the graph\n    const margin = {top: 10, right: 30, bottom: 30, left: 50},\n    width = 660 - margin.left - margin.right,\n    height = 300 - margin.top - margin.bottom;\n\n    // append the svg object to the body of the page\n    d3.select(\"#chartsvg\").remove();\n    const svg = d3.select(\"#chartdiv\")\n      .append(\"svg\")\n      .attr(\"id\",\"chartsvg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n      .attr(\"transform\",`translate(${margin.left},${margin.top})`);\n\n\n\n    const addData = async (value: string) => {\n      const dGet = (d: DataPoint) => {\n        switch(props.value) {\n          case \"Speed\": return d.speed\n          case \"Elevation\": return d.elevation\n          default: return 0\n        }\n      }\n      // Add X axis\n      const x = d3.scaleTime()\n        .domain(d3.extent(props.graphData, d => d.time*1000) as [number, number])\n        .range([ 0, width ]);\n\n      svg.append(\"g\")\n        .attr(\"transform\", `translate(0,${height})`)\n        .call(d3.axisBottom(x));\n\n      // Add Y axis\n      const y = d3.scaleLinear()\n        .domain([0, d3.max(props.graphData, d => dGet(d)) as number])\n        .range([ height, 0 ]);\n\n      svg.append(\"g\")\n        .call(d3.axisLeft(y));\n      // Add the area\n      svg.append(\"path\")\n        .datum(props.graphData)\n        .attr(\"fill\", \"#cce5df\")\n        .attr(\"stroke\", \"#69b3a2\")\n        .attr(\"stroke-width\", 1.5)\n        .attr(\"d\",\n              d3.area<DataPoint>()\n                .x((d: DataPoint) => x(d.time*1000))\n                .y0(y(0))\n                .y1((d: DataPoint) => y(dGet(d)))\n            )\n    }\n    switch(props.value) {\n        case \"Speed\": addData('speed'); break;\n        case \"Elevation\": addData('elevation'); break;\n    }\n\n  }, [props.graphData, props.value])\n  if (props.value === \"None\") {\n    return <div></div>\n  }\n  return (\n    <div className=\"card\" id=\"graphbox\" style={{position: \"absolute\", right: \"0px\", top: \"0px\"}}>\n      <div id=\"chartdiv\"></div>\n    </div>\n  )\n}\n\n\nfunction JHoverBox (props: {info: DataInfo, map?: mapboxgl.Map, loaded: boolean}) {\n  const [hovered, setHovered] = useState(0);\n  useEffect(() => {\n    for (let i = 0; i < props.info.days.length; i++) {\n      let id = genMapId(i, props.info)\n      props.map?.on('mouseenter', id, () => {\n        if (props.map?.getPaintProperty(id, 'line-opacity') === 1) {\n          setHovered(i-1)\n        }\n      })\n    }\n    console.log(\"Hover listeners setup: \", props.info.days.length, props.map)\n  }, [props.map, props.loaded, props.info])\n  if (hovered === -1 || props.info.distances.length <= hovered) {\n    return <div></div>\n  }\n  const P = styled.p`\n    margin-bottom: 0px;\n    margin-top: 2px;\n  `\n  return (\n    <div className=\"card\" id=\"hoverbox\" style={{position: \"absolute\", left: \"0px\", bottom: \"0px\"}}>\n      <h3> Day {hovered+1}: {genMapId(hovered+1, props.info)} </h3>\n      <P> Distance: {(props.info.distances[hovered] / 1000).toFixed(3)}km </P>\n      <P> Time: {(props.info.times[hovered] / 3600).toFixed(2)}h </P>\n      <P> Ascent: {(props.info.elevations[hovered]).toFixed(0)}m </P>\n      <P> Max Speed: {(props.info.topspeeds[hovered] * 3.6).toFixed(1)}km/h </P>\n      <P> Average Speed: {(props.info.averagespeeds[hovered] * 3.6).toFixed(1)}km/h </P>\n    </div>\n  )\n\n}\n\nfunction JHighlightGroup(props: {info: DataInfo, map?: mapboxgl.Map}) {\n  const [highlight, setHighlight] = useState(\"All\");\n  useEffect(() => {\n    const filterDays = (days: number[]) => {\n      for (let i = 1; i < props.info.days.length; i++) {\n        props.map?.setPaintProperty(genMapId(i, props.info), 'line-opacity', days.includes(i) ? 1 : 0)\n      }\n    }\n    const topDaysL = (srcList: number[]) => {\n      let largest = [[0,0], [0,0], [0,0], [0,0], [0,0]]\n      for (let i = 0; i < props.info.days.length; i++) {\n        const l = srcList[i]\n        if (largest[0][0] < l) {\n          largest[0] = [l, i]\n        }\n        largest.sort((a, b) => a[0] - b[0])\n      }\n      return largest.map((a) => a[1]+1)\n    }\n    const topDays = (p: string) => {\n      let data: any = props.info\n      let srcList = data[p]\n      return topDaysL(srcList)\n    }\n    const hillyness = (day: number) => props.info.elevations[day] / (props.info.distances[day] / 1000)\n    const hillinessList = props.info.distances.map((e, i) => hillyness(i))\n    switch (highlight) {\n      case 'All': filterDays([...Array(props.info.days.length+1).keys()]); break;\n      case 'Top Distance': filterDays(topDays('distances')); break;\n      case 'Top Elevation': filterDays(topDays('elevations')); break;\n      case 'Top Time': filterDays(topDays('times')); break;\n      case 'Top Hilliness': filterDays(topDaysL(hillinessList)); break;\n      case 'Top Average Speed': filterDays(topDays('averagespeeds')); break;\n      case 'Top Max Speed': filterDays(topDays('topspeeds')); break;\n      default: filterDays([]); break;\n    }\n  }, [highlight, props.info, props.map])\n  return (\n          <JRadioGroup value={highlight} setter={setHighlight}>\n            <JRadio value=\"All\"/>\n            <JRadio value=\"Top Average Speed\"/>\n            <JRadio value=\"Top Max Speed\"/>\n            <JRadio value=\"Top Distance\"/>\n            <JRadio value=\"Top Time\"/>\n            <JRadio value=\"Top Elevation\"/>\n            <JRadio value=\"Top Hilliness\"/>\n          </JRadioGroup>\n  )\n}\n\nfunction JColorbyGroup(props: {map?: mapboxgl.Map, info: DataInfo}) {\n  const [colorby, setColorby] = useState(\"Same\");\n\n  useEffect(() => {\n    const info = props.info\n    const map = props.map\n    const setLayersToColor = (color: (string|((i: number) => string))) => {\n      for (let i = 1; i < info.days.length; i++) {\n        let id = genMapId(i, info);\n        let c = (typeof color === \"string\") ? color : color(i)\n        map?.setPaintProperty(id, \"line-color\", c)\n      }\n    }\n\n    const provinceColorOfDay = (day: number) => {\n      let colors = [\"#2196f3\", \"#ff9800\", \"#43a047\", \"#81d4fa\", \"#e53935\", \"#1a237e\", \"#00acc1\", \"#004d40\", \"#e65100\", \"#4e342e\"]\n      let provinces = [\"BC\", \"Alberta\", \"Saskatchewan\", \"Manitoba\", \"Ontario\", \"Quebec\", \"New Brunswick\", \"Nova Scotia\", \"PEI\", \"Newfoundland\"]\n      let points = info.days[day]\n      let npi = info.provinces.findIndex((x) => x[1] >= points)\n      let p = npi===-1 ? 0 : npi - 1\n      return colors[provinces.indexOf(info.provinces[p][0])]\n    }\n\n    const hillys = info.elevations.map((e, i) => e / info.distances[i])\n    const maxDistance = Math.max(...info.distances)\n    const minDistance = Math.min(...info.distances)\n    const maxElevation = Math.max(...info.elevations)\n    const minElevation = Math.min(...info.elevations)\n    const maxTop = Math.max(...info.topspeeds)\n    const minTop = Math.min(...info.topspeeds)\n    const maxAve = Math.max(...info.averagespeeds)\n    const minAve = Math.min(...info.averagespeeds)\n    const maxHill = Math.max(...hillys)\n    const minHill = Math.min(...hillys)\n\n    const colorByDistance = (day: number) =>\n      lerpColor(\"#FFFFFF\",\"#000000\", (info.distances[day-1] - minDistance) / (maxDistance - minDistance))\n    const colorByElevation = (day: number) =>\n      lerpColor(\"#FFFFFF\",\"#000000\", (info.elevations[day-1] - minElevation) / (maxElevation - minElevation))\n    const colorBySpeedTop = (day: number) =>\n      lerpColor(\"#FFFFFF\",\"#000000\", (info.topspeeds[day-1] - minTop) / (maxTop - minTop))\n    const colorBySpeedAve = (day: number) =>\n      lerpColor(\"#FFFFFF\",\"#000000\", (info.averagespeeds[day-1] - minAve) / (maxAve - minAve))\n\n    const hillyness = (day: number) => ((hillys[day-1] - minHill) / (maxHill - minHill))\n    const colorByHills = (day: number) => {\n      return lerpColor(\"#FFFFFF\",\"#000000\", hillyness(day))\n    }\n    const colorByDay = (day: number) => {\n      let colors = [\"#2196f3\", \"#ff9800\", \"#43a047\", \"#e53935\"]\n      return colors[day % colors.length]\n    }\n    switch (colorby) {\n      case \"Same\": setLayersToColor(\"#fc4c02\"); break;\n      case \"Province\": setLayersToColor(provinceColorOfDay); break;\n      case \"Day\": setLayersToColor(colorByDay); break;\n      case \"Elevation\": setLayersToColor(colorByElevation); break;\n      case \"Hilliness\": setLayersToColor(colorByHills); break;\n      case \"Distance\": setLayersToColor(colorByDistance); break;\n      case \"Top Speed\": setLayersToColor(colorBySpeedTop); break;\n      case \"Average Speed\": setLayersToColor(colorBySpeedAve); break;\n    }\n  }, [colorby, props.info, props.map])\n\n  return (\n          <JRadioGroup value={colorby} setter={setColorby}>\n            <JRadio value=\"Same\"/>\n            <JRadio value=\"Province\"/>\n            <JRadio value=\"Day\"/>\n            <JRadio value=\"Distance\"/>\n            <JRadio value=\"Hilliness\"/>\n            <JRadio value=\"Elevation\"/>\n            <JRadio value=\"Top Speed\"/>\n            <JRadio value=\"Average Speed\"/>\n          </JRadioGroup>\n  )\n}\n\n// https://gist.github.com/rosszurowski/67f04465c424a9bc0dae\nfunction lerpColor(a: string, b: string, amount: number) {\n    var ah = +a.replace(/#/g, '0x'),\n        ar = ah >> 16, ag = (ah >> 8) & 0xff, ab = ah & 0xff,\n        bh = +b.replace(/#/g, '0x'),\n        br = bh >> 16, bg = (bh >> 8) & 0xff, bb = bh & 0xff,\n        rr = ar + amount * (br - ar),\n        rg = ag + amount * (bg - ag),\n        rb = ab + amount * (bb - ab);\n    return '#' + ((1 << 24) + (rr << 16) + (rg << 8) + rb | 0).toString(16).slice(1);\n}\n\n\nasync function getDataInfo() {\n  const dataUrl = process.env.PUBLIC_URL + '/bike_data/info';\n  let response = await fetch(dataUrl);\n  let jresponse = await response.json();\n  console.log(jresponse);\n  return jresponse;\n}\nasync function addRestOfData(locations: number[][], setGraphData: (d: DataPoint[])=>void) {\n  async function getAData(loc: string) {\n    const dataUrl = process.env.PUBLIC_URL + '/bike_data/' + loc;\n    let response = await fetch(dataUrl);\n    let blob = await response.blob();\n    let arr = await blob.arrayBuffer();\n    console.log(\"Finished Graph Data: \" + loc)\n    return arr;\n  }\n\n  const times = new Int32Array(await getAData('time'))\n  const speeds = new Float32Array(await getAData('speed'))\n  const elevations = new Float32Array(await getAData('ele'))\n\n  const dataPoints: DataPoint[] = locations.map((l, i) => {\n    return {\n      latitude: l[0],\n      longtitude: l[1],\n      time: times[i],\n      speed: speeds[i],\n      elevation: elevations[i],\n    }\n  })\n  console.log({locations, times, speeds, elevations})\n  console.log(\"Finished Setting Graph Data\", dataPoints)\n  setGraphData(dataPoints)\n\n}\nasync function addData(map: mapboxgl.Map, setInfo: (d: DataInfo)=>void, setGraphData: (d: DataPoint[])=>void, setLoaded: (b:boolean) => void) {\n  const info: DataInfo = await getDataInfo();\n  const dataUrl = process.env.PUBLIC_URL + '/bike_data/loc';\n  let data = [];\n  let response = await fetch(dataUrl);\n  let blob = await response.blob();\n  let arr = await blob.arrayBuffer();\n  let floats = new Float32Array(arr);\n\n  let lf = null;\n  let idx = 1;\n  let c = 0;\n  let locations = [];\n  for (let f of floats) {\n    if (lf === null) {\n      lf = f;\n    } else {\n      data.push([f, lf]);\n      locations.push([f, lf])\n      c += 1;\n      lf = null;\n    }\n    if (info.days[idx] <= c) {\n      addLineToMap(data, map, genMapId(idx, info));\n      idx += 1;\n      data = [];\n    }\n  }\n  setInfo(info);\n  console.log(\"Fetching complete\");\n  await addRestOfData(locations, setGraphData)\n  setLoaded(true)\n}\n\nfunction genMapId(idx: number, info: DataInfo): string {\n return info.locations[idx-1]+ \" to \" +info.locations[idx]\n}\nfunction addLineToMap(data: number[][], map: mapboxgl.Map, id: string) {\n  map.addSource(id, {\n    'type': 'geojson',\n    'data': {\n      'type': 'Feature',\n      'properties': {},\n      'geometry': {\n        'type': 'LineString',\n        'coordinates': data\n      }\n    }\n  });\n\n  map.addLayer({\n    'id': id,\n    'type': 'line',\n    'source': id,\n    'layout': {\n      'line-join': 'round',\n      'line-cap': 'round'\n    },\n    'paint': {\n      'line-color': '#fc4c02',\n      'line-width': 5\n    }\n  });\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}